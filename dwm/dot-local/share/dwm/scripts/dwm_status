#!/bin/sh

# set -x

print_usage() {
	printf "$(basename "${0}") [-h] [-p]\\n
 -h    Output a usage message and exit
 -p    Pango formatted output
"
}

pango=""
while getopts ":hp" opt
do
    case ${opt} in
        h)
            print_usage
            exit
            ;;
        p)
            pango="yes"
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
    esac
done
shift $((OPTIND - 1))

if [ ${#} -gt 0 ]
then
    print_usage >&2
    exit 1
fi

date_and_time(){
    date '+%b %e %a %_Hh%M'
}

# From i3blocks
cpu_load(){
    idle=$(mpstat 1 1 | sed -n 's/^Average.* \([0-9]\+\.[0-9]\+\)/\1/p')
    echo "100-${idle}" | bc -l
}

# From i3blocks
memory_info(){
    type=${1}
    awk -v type=$type '
    /^MemFree:/ {
        mem_free=$2
    }
    /^Buffers:/ {
        mem_free+=$2
    }
    /^Cached:/ {
        mem_free+=$2
    }
    /^SwapTotal:/ {
        swap_total=$2
    }
    /^SwapFree:/ {
        swap_free=$2
    }
    END {
        # full text
        if (type == "swap")
            printf("%4.1fG\n", (swap_total-swap_free)/1024/1024)
        else
            printf("%4.1fG\n", mem_free/1024/1024)
    }
    ' /proc/meminfo
}

# From i3blocks
hdd_info(){
    df -h -P -l / | awk '/^\// {print $4}'
}

up(){
    ping -W 1 -c 1 ${1} >/dev/null 2>&1
}

internet(){
    # cloudflare, opendns & google
    if ! up 1.1.1.1 && ! up 208.67.222.222 && ! up 8.8.8.8
    then
        echo "*"
        exit 1
    fi
}

# Killing all other instances
pid=${$}
pgrep -f '/bin/sh .*\.local/share/dwm/scripts/dwm_status$' \
    | grep -v ${pid} | xargs -r kill -9

pango_format_cpu_load(){
    load=${1}
    if [ -n "${cpu_load%.*}" ] && [ ${cpu_load%.*} -ge 80 ]
    then
        echo "<span color='red'>${load}</span>"
        exit
    fi
    if [ -n "${cpu_load%.*}" ] && [ ${cpu_load%.*} -ge 50 ]
    then
        echo "<span color='yellow'>${load}</span>"
        exit
    fi
    echo "${load}"
}

pango(){
    [ -n "${internet}" ] && internet="<span color='yellow'>${internet}</span>"
    [ -z "${internet}" ] && internet="<span color='green'>@</span>"
    pango_cpu_load="$(pango_format_cpu_load "$(printf '%6.2f%%' ${cpu_load})")"
    printf ' %s  [%6s]  %5s  %s  %s ' \
       "${internet}" ${hdd_info} "${memory_info}" "${pango_cpu_load}" "${date_and_time}"
}

regular(){
    [ -z "${internet}" ] && internet="@"
    printf ' %s  [%6s]  %5s  %6.2f%%  %s ' \
       "${internet}" ${hdd_info} "${memory_info}" ${cpu_load} "${date_and_time}"
}

status=""

while true
do
    seconds=$(date '+%-S')

    if [ $((seconds%60)) -eq 0 ]
    then
        # If there is no X session, then die
        xset q 2>&1 >/dev/null || exit 1
    fi

    ([ -z "${status}" ] || [ $((seconds%10)) -eq 0 ]) && internet="$(internet)"
    ([ -z "${status}" ] || [ $((seconds%20)) -eq 0 ]) && hdd_info=$(hdd_info)
    ([ -z "${status}" ] || [ $((seconds%10)) -eq 0 ]) && memory_info="$(memory_info)"
    ([ -z "${status}" ] || [ $((seconds%5))  -eq 0 ]) && cpu_load=$(cpu_load)
    ([ -z "${status}" ] || [ $((seconds%60)) -eq 0 ]) && date_and_time="$(date_and_time)"

    [ -n "${pango}" ] && status="$(pango)" || status="$(regular)"

    xsetroot -name "${status}"
    sleep 4
done
