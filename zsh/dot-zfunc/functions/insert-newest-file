# Inserts files, from newest to oldest, of the folder to the left of the cursor,
# if it exists; else it inserts from $PWD.

emulate -L zsh

typeset -g __inf_offset
typeset __inf_cache_dir=~/.cache
typeset __inf_cache=~/.cache/insert_newest_file_cache
integer cursor=$CURSOR lcursor=$CURSOR

if [[ ! -e ${__inf_cache_dir} ]]
then
    mkdir ${__inf_cache_dir}
fi

if [[ $WIDGET = $LASTWIDGET ]]
then
    lcursor=$__inf_lcursor
    __inf_offset=${__inf_offset:-0}
    (( __inf_offset++ ))
else
    __inf_offset=0
    typeset -g __inf_lcursor=$lcursor
    typeset __dir="."
    typeset -g __killed="${BUFFER:${CURSOR}}"
    zle .kill-line
    if [[ ${BUFFER[CURSOR]} == "/" ]]
    then
        zle .insert-last-word 0
        cursor=$CURSOR
        typeset __last_word="${BUFFER:${lcursor}}"
        __last_word="${(Q)__last_word}"
        if [[ ${__last_word[1]} == "~" ]]
        then
            __last_word=~/"${__last_word:2}"
        fi
        if [[ -d "${__last_word}" ]]
        then
            __dir="${__last_word}"
        fi
    fi
    ls -1tr "${__dir}" > ${__inf_cache}
fi

typeset __count __line_count=$(wc -l < ${__inf_cache})
(( __count = __line_count - __inf_offset ))

[[ ${__count} -le 0 ]] && return 1

typeset __newest_file=$(printf %q "$(head -n ${__count} ${__inf_cache} | \
    tail -n 1 | tr -d '\n')")

LBUFFER[lcursor+1,cursor+1]=${__newest_file}
RBUFFER="${__killed}"

# vim:ft=zsh
